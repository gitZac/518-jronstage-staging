.row {
    max-width: $grid-width;
    margin: 1rem auto;

    &:not(:last-child) {
        margin-bottom: $grid-gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $grid-gutter-vertical-small;
        }
    }
    
    @include respond(tab-port) {
        max-width: 50rem;
    }

    @include clearfix;

    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $grid-gutter-horizontal;

            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $grid-gutter-vertical-small;
            }
        }

        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$grid-gutter-horizontal}) / 2);
        
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$grid-gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$grid-gutter-horizontal}) / 3) + #{$grid-gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$grid-gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$grid-gutter-horizontal}) / 4) + #{$grid-gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$grid-gutter-horizontal}) / 4) + 2 * #{$grid-gutter-horizontal});
    }

}

//for testing

.bg-red{
    background-color:orangered;
}

.bg-green{
    background-color:palegreen;
}

.padding100{
    padding:2rem;
}

//CSSGRID

.l-grid-main{
    display:grid;
    grid-template-columns: 2fr 0.9fr;
    grid-gap: 3rem;
    
    @include respond(tab-port){
        grid-template-columns: 1fr;
    }
}

.grid-auto{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
    grid-gap: 2rem;
    align-items: center;
    
    &--short{
        grid-template-columns: repeat(auto-fit, minmax(10rem, 15rem));
        justify-content: center;
    }
}

.grid2{
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 2rem;
    
    &--1col-phone-land{
        @include respond(phone-land){
            grid-template-columns:1fr;
        }
    }
    
    &--1col-phone{
        @include respond(phone){     
            grid-template-columns: 1fr;
        }   
    }
}

.grid4{
    display:grid;
//    grid-template-columns: repeat(4,1fr);
//    grid-auto-rows: auto;
//    grid-gap: 1.5rem;
    
        @include respond(phone-land){
//            grid-template-columns:1fr 1fr;
////            justify-items:center;
//            grid-template-rows: 1fr;
//            align-items: center
        }
        
    &__item-1{
//        grid-column: 1/ span 4;
//        grid-row:1/ span 1;
    }
    
    &__item-2{
//        grid-row:2/ span 2;
//        grid-column: 1 / span 3;        
    }
    
    &__item-3{
//        grid-row: 3/ span 1;
//        grid-column: 1/ span 2;
        
    }
    
    &__item-4{
//        grid-row: 5/ span 1;
//        grid-column: 1/ span 4;
    }
}

.grid-3fr-1fr{
    display: grid;
    grid-template-columns: 3fr 1fr;
    
    @include respond(phone-land){
        grid-template-columns: 1fr;
    }
}


/* COLUMNS */

footer .l-grid1-3{
	justify-items:center;
}