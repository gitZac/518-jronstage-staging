//Note: .col must be the first class in the markup. Otherwise the floats won't work.

.row{
    max-width:$grid-width;
    margin:0 auto;
    // Grid will take a max value of 1114px.

    @include respond(tab-port){
        max-width: 50rem;
    }

    &:not(:last-child){
        margin-bottom:$grid-gutter-vertical;

        @include respond(tab-port){
            margin-bottom:$grid-gutter-vertical--small; 
        }
    }

    @include clearfix;

    [class^="col"]{
        float:left;

        @include respond(tab-port){
            width:100% !important; //Removes columns.
        }

        &:not(:last-child){
            margin-right: $grid-gutter-horizontal;
            
            @include respond(tab-port){
                margin-right:0; //Since columns are removed, horizontal gutter is not needed.
                margin-bottom:$grid-gutter-vertical--small;
            }
        }
    }

    .col1-of-2{
        width:calc( ( 100% - #{$grid-gutter-horizontal} ) /2 );
    }

    .col1-of-3{
        width:calc((100% - 2 * #{$grid-gutter-horizontal}) /3 );
    }

    .col2-of-3{
        width: calc(2 * ((100% - 2 * #{$grid-gutter-horizontal}) / 3) + #{$grid-gutter-horizontal});
    }

    .col1-of-4{
        width:calc((100% - 3 * #{$grid-gutter-horizontal} ) /4 );
    }

    .col2-of-4{
        width: calc(2 * ((100% - 3 * #{$grid-gutter-horizontal}) / 4) + #{$grid-gutter-horizontal});
    }

    .col3-of-4{
        width: calc(3 * ((100% - 3 * #{$grid-gutter-horizontal}) / 4) + 2 * #{$grid-gutter-horizontal});
    }

}


//for testing

.bg-red{
    background-color:orangered;
}

.bg-green{
    background-color:palegreen;
}

.padding100{
    padding:2rem;
}

//CSSGRID

.grid2{
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 2rem;
    
    &--1col-phone-land{
        @include respond(phone-land){
            grid-template-columns:1fr;
        }
    }
    
    &--1col-phone{
        @include respond(phone){     
            grid-template-columns: 1fr;
        }   
    }
}

.grid4{
    display:grid;
//    grid-template-columns: repeat(4,1fr);
//    grid-auto-rows: auto;
//    grid-gap: 1.5rem;
    
        @include respond(phone-land){
//            grid-template-columns:1fr 1fr;
////            justify-items:center;
//            grid-template-rows: 1fr;
//            align-items: center
        }
        
    &__item-1{
//        grid-column: 1/ span 4;
//        grid-row:1/ span 1;
    }
    
    &__item-2{
//        grid-row:2/ span 2;
//        grid-column: 1 / span 3;        
    }
    
    &__item-3{
//        grid-row: 3/ span 1;
//        grid-column: 1/ span 2;
        
    }
    
    &__item-4{
//        grid-row: 5/ span 1;
//        grid-column: 1/ span 4;
    }
}


//OLD CODE TO BE REFACTORED


.l-main-banner-grid{
	display:grid;
	grid-template-columns: 1fr 1fr;
}

.l-secondary-banner-grid{
	display:grid;
	grid-template-columns: 3fr 1fr;
}

.l-grid-feature{
	display:grid;
	grid-template-columns:1fr 3fr;
}

.l-grid-services{
	display:grid;
	grid-template-columns:repeat(1, 1fr);
}

@media only screen and (min-width:1000px) {
	.l-grid-main{
		display:grid;
		grid-template-columns: 2fr 0.9fr;
	}
}

@media only screen and (min-width:768px) {	
	.l-grid1-2{
		display:grid;
		grid-template-columns: 1fr 1fr;
	}
	.l-grid1-3{
		display:grid;
		grid-template-columns:repeat(3, 1fr);
	}

	.l-grid1-4{
		display:grid;
		grid-template-columns: repeat(4, 1fr);
	}
	
	.l-grid-offset1-2{
		display:grid;
		grid-template-columns:1.5fr 2fr;
		grid-gap:1em;
	}
	
	.l-grid-feature{
		display:block;
	}
	
	.l-grid-services{
		grid-template-columns:repeat(2, 1fr);
	}
} 

/* COLUMNS */

footer .l-grid1-3{
	justify-items:center;
}